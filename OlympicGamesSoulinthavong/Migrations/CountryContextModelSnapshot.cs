// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGamesSoulinthavong.Models;

namespace OlympicGamesSoulinthavong.Migrations
{
    [DbContext(typeof(CountryContext))]
    partial class CountryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlympicGamesSoulinthavong.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OlympicGameId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SportId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryID");

                    b.HasIndex("OlympicGameId");

                    b.HasIndex("SportId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "can",
                            LogoImage = "can.png",
                            Name = "Canada",
                            OlympicGameId = "wo",
                            SportId = "curl"
                        },
                        new
                        {
                            CountryID = "se",
                            LogoImage = "se.png",
                            Name = "Sweden",
                            OlympicGameId = "wo",
                            SportId = "curl"
                        },
                        new
                        {
                            CountryID = "gb",
                            LogoImage = "gb.png",
                            Name = "Great Britain",
                            OlympicGameId = "wo",
                            SportId = "curl"
                        },
                        new
                        {
                            CountryID = "jam",
                            LogoImage = "jam.png",
                            Name = "Jamaica",
                            OlympicGameId = "wo",
                            SportId = "bob"
                        },
                        new
                        {
                            CountryID = "it",
                            LogoImage = "it.png",
                            Name = "Italy",
                            OlympicGameId = "wo",
                            SportId = "bob"
                        },
                        new
                        {
                            CountryID = "jp",
                            LogoImage = "jp.png",
                            Name = "Japan",
                            OlympicGameId = "wo",
                            SportId = "bob"
                        },
                        new
                        {
                            CountryID = "germ",
                            LogoImage = "germ.png",
                            Name = "Germany",
                            OlympicGameId = "so",
                            SportId = "div"
                        },
                        new
                        {
                            CountryID = "chi",
                            LogoImage = "chi.png",
                            Name = "China",
                            OlympicGameId = "so",
                            SportId = "div"
                        },
                        new
                        {
                            CountryID = "mex",
                            LogoImage = "mex.png",
                            Name = "Mexico",
                            OlympicGameId = "so",
                            SportId = "div"
                        },
                        new
                        {
                            CountryID = "braz",
                            LogoImage = "braz.png",
                            Name = "Brazil",
                            OlympicGameId = "so",
                            SportId = "cycl"
                        },
                        new
                        {
                            CountryID = "ne",
                            LogoImage = "ne.png",
                            Name = "Netherlands",
                            OlympicGameId = "so",
                            SportId = "cycl"
                        },
                        new
                        {
                            CountryID = "usa",
                            LogoImage = "usa.png",
                            Name = "USA",
                            OlympicGameId = "so",
                            SportId = "cycl"
                        },
                        new
                        {
                            CountryID = "thai",
                            LogoImage = "thai.png",
                            Name = "Thailand",
                            OlympicGameId = "po",
                            SportId = "arch"
                        },
                        new
                        {
                            CountryID = "ur",
                            LogoImage = "ur.png",
                            Name = "Uruguy",
                            OlympicGameId = "po",
                            SportId = "arch"
                        },
                        new
                        {
                            CountryID = "ukr",
                            LogoImage = "ukr.png",
                            Name = "Ukraine",
                            OlympicGameId = "po",
                            SportId = "arch"
                        },
                        new
                        {
                            CountryID = "aus",
                            LogoImage = "aus.png",
                            Name = "Austria",
                            OlympicGameId = "po",
                            SportId = "cs"
                        },
                        new
                        {
                            CountryID = "pak",
                            LogoImage = "pak.png",
                            Name = "Pakistan",
                            OlympicGameId = "po",
                            SportId = "cs"
                        },
                        new
                        {
                            CountryID = "zim",
                            LogoImage = "zim.png",
                            Name = "Zimbabwe",
                            OlympicGameId = "po",
                            SportId = "cs"
                        },
                        new
                        {
                            CountryID = "fran",
                            LogoImage = "fran.png",
                            Name = "France",
                            OlympicGameId = "yo",
                            SportId = "break"
                        },
                        new
                        {
                            CountryID = "cyp",
                            LogoImage = "cyp.png",
                            Name = "Cyprus",
                            OlympicGameId = "yo",
                            SportId = "break"
                        },
                        new
                        {
                            CountryID = "rus",
                            LogoImage = "rus.png",
                            Name = "Russia",
                            OlympicGameId = "yo",
                            SportId = "break"
                        },
                        new
                        {
                            CountryID = "fin",
                            LogoImage = "fin.png",
                            Name = "Finland",
                            OlympicGameId = "yo",
                            SportId = "skate"
                        },
                        new
                        {
                            CountryID = "slov",
                            LogoImage = "slov.png",
                            Name = "Slovakia",
                            OlympicGameId = "yo",
                            SportId = "skate"
                        },
                        new
                        {
                            CountryID = "port",
                            LogoImage = "port.png",
                            Name = "Portugal",
                            OlympicGameId = "yo",
                            SportId = "skate"
                        });
                });

            modelBuilder.Entity("OlympicGamesSoulinthavong.Models.OlympicGame", b =>
                {
                    b.Property<string>("OlympicGameId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OlympicGameId");

                    b.ToTable("OlympicGames");

                    b.HasData(
                        new
                        {
                            OlympicGameId = "wo",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            OlympicGameId = "so",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            OlympicGameId = "po",
                            Name = "Paralympics"
                        },
                        new
                        {
                            OlympicGameId = "yo",
                            Name = "Youth Olympics"
                        });
                });

            modelBuilder.Entity("OlympicGamesSoulinthavong.Models.Sport", b =>
                {
                    b.Property<string>("SportId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportId");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            SportId = "curl",
                            Category = "Indoor",
                            Name = "Curling"
                        },
                        new
                        {
                            SportId = "bob",
                            Category = "Outdoor",
                            Name = "Bobsleigh"
                        },
                        new
                        {
                            SportId = "div",
                            Category = "Indoor",
                            Name = "Diving"
                        },
                        new
                        {
                            SportId = "cycl",
                            Category = "Outdoor",
                            Name = "Road Cycling"
                        },
                        new
                        {
                            SportId = "arch",
                            Category = "Indoor",
                            Name = "Archery"
                        },
                        new
                        {
                            SportId = "cs",
                            Category = "Outdoor",
                            Name = "Canoe Sprint"
                        },
                        new
                        {
                            SportId = "break",
                            Category = "Indoor",
                            Name = "Breakdancing"
                        },
                        new
                        {
                            SportId = "skate",
                            Category = "Outdoor",
                            Name = "Skateboarding"
                        });
                });

            modelBuilder.Entity("OlympicGamesSoulinthavong.Models.Country", b =>
                {
                    b.HasOne("OlympicGamesSoulinthavong.Models.OlympicGame", "OlympicGame")
                        .WithMany()
                        .HasForeignKey("OlympicGameId");

                    b.HasOne("OlympicGamesSoulinthavong.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId");

                    b.Navigation("OlympicGame");

                    b.Navigation("Sport");
                });
#pragma warning restore 612, 618
        }
    }
}
